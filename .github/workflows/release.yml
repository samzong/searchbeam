name: Release

on:
  push:
    tags:
      - 'v*.*.*'

# 添加默认权限配置
permissions:
  contents: read

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    # 为create-release作业添加所需权限
    permissions:
      contents: write
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get Version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Generate Simple Changelog
        id: changelog
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          TAG_DATE=$(git log -1 --format=%ai $GITHUB_REF | cut -d' ' -f1)
          
          # Try to get previous tag
          PREV_TAG=""
          PREV_TAG=$(git describe --tags --abbrev=0 $GITHUB_REF^ 2>/dev/null || echo "")
          
          # Generate commit log
          if [ -n "$PREV_TAG" ]; then
            COMMIT_LOG=$(git log $PREV_TAG..$GITHUB_REF --pretty=format:"* %s (%h)" --no-merges)
          else
            COMMIT_LOG=$(git log $GITHUB_REF --pretty=format:"* %s (%h)" --no-merges)
          fi
          
          # Format changelog and save to file
          cat > changelog.md << EOF                    
          ### Commit Log
          
          $COMMIT_LOG
          
          ### Docker Image
          
          \`\`\`bash
          docker pull ghcr.io/${{ github.repository_owner }}/yt-search-api:$TAG_NAME
          \`\`\`
          
          Supported architectures: linux/amd64, linux/arm64
          EOF
          
          # Output changelog to GitHub Actions
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false 